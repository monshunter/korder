# 仿照CronJob
apiVersion: core.korder.dev/v1alpha1
kind: CronOrder
metadata:
  name: cron-order-sample
spec:
  schedule: "0 0 * * *"
  timeZone: ""
  suspend: false
  startingDeadlineSeconds: 300
  ConcurrencyPolicy: Allow|Forbid|Replace
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  orderTemplate:
    # 这里是Kind: Order 的metadata
    metadata:
      name: order-sample
    # 这里是Kind: Order 的spec
    spec:
      paused: false # optional, 暂停订单
      replicas: 1
      refreshPolicy: "Always|OnClaim|Never" # 更明确的刷新策略
      minReadySeconds: 60
      selector:
        matchLabels:
          app: "app-name"
        matchExpressions:
          - { key: env, operator: In, values: [dev] }
      template:
        metadata:
          labels:
            app: "app-name"
            env: "dev"
        spec:
          # optional, 可以指定，或者由 Order 控制器 填充
          window:
            startTime: "" # 开始时间，格式为 RFC3339，例如：2024-01-01T00:00:00Z
            timeZone: ""
            duration: 3600s
          schedulerName: default-scheduler
          priorityClassName: "priority-class-name"
          resources:
            requests:
              cpu: 100m
              memory: 500Mi
          nodeName: "node-1"
          nodeSelector:
            kubernetes.io/arch: amd64
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - amd64
                  - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
              preferredDuringSchedulingIgnoredDuringExecution: []
            podAffinity: {}
            podAntiAffinity: {}
          tolerations:
            - key: "key1"
              operator: "Equal"
              value: "value1"
              effect: "NoSchedule"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: "topology.kubernetes.io/zone"
              whenUnsatisfiable: "DoNotSchedule"
              labelSelector:
                matchLabels:
                  app: "app-name"
                  env: "dev"



status:
  active:
    # 使用corev1.ObjectReference
    - corev1.ObjectReference
    -
  lastScheduleTime: "2023-01-01T00:00:00Z"
  lastSuccessfulTime: ""
